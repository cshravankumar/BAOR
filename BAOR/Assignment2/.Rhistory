Pslp = 0
Pspwr = 0
Pvlo = 0
Pxom = 0
for (i in {2:length(Lcnx)}){
Pcnx[i] <- Lcnx[i] - Lcnx[i-1]
}
for (i in {2:length(Lcop)}){
Pcop[i] <- Lcop[i] - Lcop[i-1]
}
for (i in {2:length(Lcvx)}){
Pcvx[i] <- Lcvx[i] - Lcvx[i-1]
}
for (i in {2:length(Lipwr)}){
Pipwr[i] <- Lipwr[i] - Lipwr[i-1]
}
for (i in {2:length(Ljks)}){
Pjks[i] <- Ljks[i] - Ljks[i-1]
}
for (i in {2:length(Lscty)}){
Pscty[i] <- Lscty[i] - Lscty[i-1]
}
for (i in {2:length(Lslp)}){
Pslp[i] <- Lslp[i] - Lslp[i-1]
}
for (i in {2:length(Lspwr)}){
Pspwr[i] <- Lspwr[i] - Lspwr[i-1]
}
for (i in {2:length(Lvlo)}){
Pvlo[i] <- Lvlo[i] - Lvlo[i-1]
}
for (i in {2:length(Lxom)}){
Pxom[i] <- Lxom[i] - Lxom[i-1]
}
par(mfrow=c(5,2), mar = rep(2,4))
hist(Pcnx,plot = TRUE, breaks = 50)
hist(Pcop,plot = TRUE, breaks = 50)
hist(Pcvx,plot = TRUE, breaks = 49)
hist(Pipwr,plot = TRUE, breaks = 50)
hist(Pjks,plot = TRUE, breaks = 50)
hist(Pscty,plot = TRUE, breaks = 49)
hist(Pslp,plot = TRUE, breaks = 49)
hist(Pspwr,plot = TRUE, breaks = 49)
hist(Pvlo,plot = TRUE, breaks = 50)
hist(Pxom,plot = TRUE, breaks = 49)
#Program to calculate log(St/St-1) of 10 Stocks and project histogram
cnx = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/cnx.csv")
cop = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/cop.csv")
cvx = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/cvx.csv")
ipwr = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/ipwr.csv")
jks = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/jks.csv")
scty = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/scty.csv")
slp = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/slb.csv")
spwr = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/spwr.csv")
vlo = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/vlo.csv")
xom = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/xom.csv")
Lcnx = sapply(cnx[,5],log)
Lcop = sapply(cop[,5],log)
Lcvx = sapply(cvx[,5],log)
Lipwr = sapply(ipwr[,5],log)
Ljks = sapply(jks[,5],log)
Lscty = sapply(scty[,5],log)
Lslp = sapply(slp[,5],log)
Lspwr = sapply(spwr[,5],log)
Lvlo = sapply(vlo[,5],log)
Lxom = sapply(xom[,5],log)
Pcnx = 0
Pcop = 0
Pcvx = 0
Pipwr = 0
Pjks = 0
Pscty = 0
Pslp = 0
Pspwr = 0
Pvlo = 0
Pxom = 0
for (i in {2:length(Lcnx)}){
Pcnx[i] <- Lcnx[i] - Lcnx[i-1]
}
for (i in {2:length(Lcop)}){
Pcop[i] <- Lcop[i] - Lcop[i-1]
}
for (i in {2:length(Lcvx)}){
Pcvx[i] <- Lcvx[i] - Lcvx[i-1]
}
for (i in {2:length(Lipwr)}){
Pipwr[i] <- Lipwr[i] - Lipwr[i-1]
}
for (i in {2:length(Ljks)}){
Pjks[i] <- Ljks[i] - Ljks[i-1]
}
for (i in {2:length(Lscty)}){
Pscty[i] <- Lscty[i] - Lscty[i-1]
}
for (i in {2:length(Lslp)}){
Pslp[i] <- Lslp[i] - Lslp[i-1]
}
for (i in {2:length(Lspwr)}){
Pspwr[i] <- Lspwr[i] - Lspwr[i-1]
}
for (i in {2:length(Lvlo)}){
Pvlo[i] <- Lvlo[i] - Lvlo[i-1]
}
for (i in {2:length(Lxom)}){
Pxom[i] <- Lxom[i] - Lxom[i-1]
}
par(mfrow=c(5,2), mar = rep(2,4))
hist(Pcnx,plot = TRUE, breaks = 100)
hist(Pcop,plot = TRUE, breaks = 100)
hist(Pcvx,plot = TRUE, breaks = 100)
hist(Pipwr,plot = TRUE, breaks = 100)
hist(Pjks,plot = TRUE, breaks = 100)
hist(Pscty,plot = TRUE, breaks = 100)
hist(Pslp,plot = TRUE, breaks = 100)
hist(Pspwr,plot = TRUE, breaks = 100)
hist(Pvlo,plot = TRUE, breaks = 100)
hist(Pxom,plot = TRUE, breaks = 100)
#Program to calculate log(St/St-1) of 10 Stocks and project histogram
cnx = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/cnx.csv")
cop = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/cop.csv")
cvx = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/cvx.csv")
ipwr = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/ipwr.csv")
jks = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/jks.csv")
scty = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/scty.csv")
slp = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/slb.csv")
spwr = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/spwr.csv")
vlo = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/vlo.csv")
xom = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/xom.csv")
Lcnx = sapply(cnx[,5],log)
Lcop = sapply(cop[,5],log)
Lcvx = sapply(cvx[,5],log)
Lipwr = sapply(ipwr[,5],log)
Ljks = sapply(jks[,5],log)
Lscty = sapply(scty[,5],log)
Lslp = sapply(slp[,5],log)
Lspwr = sapply(spwr[,5],log)
Lvlo = sapply(vlo[,5],log)
Lxom = sapply(xom[,5],log)
Pcnx = 0
Pcop = 0
Pcvx = 0
Pipwr = 0
Pjks = 0
Pscty = 0
Pslp = 0
Pspwr = 0
Pvlo = 0
Pxom = 0
for (i in {2:length(Lcnx)}){
Pcnx[i] <- Lcnx[i] - Lcnx[i-1]
}
for (i in {2:length(Lcop)}){
Pcop[i] <- Lcop[i] - Lcop[i-1]
}
for (i in {2:length(Lcvx)}){
Pcvx[i] <- Lcvx[i] - Lcvx[i-1]
}
for (i in {2:length(Lipwr)}){
Pipwr[i] <- Lipwr[i] - Lipwr[i-1]
}
for (i in {2:length(Ljks)}){
Pjks[i] <- Ljks[i] - Ljks[i-1]
}
for (i in {2:length(Lscty)}){
Pscty[i] <- Lscty[i] - Lscty[i-1]
}
for (i in {2:length(Lslp)}){
Pslp[i] <- Lslp[i] - Lslp[i-1]
}
for (i in {2:length(Lspwr)}){
Pspwr[i] <- Lspwr[i] - Lspwr[i-1]
}
for (i in {2:length(Lvlo)}){
Pvlo[i] <- Lvlo[i] - Lvlo[i-1]
}
for (i in {2:length(Lxom)}){
Pxom[i] <- Lxom[i] - Lxom[i-1]
}
par(mfrow=c(5,2), mar = rep(2,4))
hist(Pcnx,plot = TRUE, breaks = 150)
hist(Pcop,plot = TRUE, breaks = 150)
hist(Pcvx,plot = TRUE, breaks = 150)
hist(Pipwr,plot = TRUE, breaks = 150)
hist(Pjks,plot = TRUE, breaks = 150)
hist(Pscty,plot = TRUE, breaks = 150)
hist(Pslp,plot = TRUE, breaks = 150)
hist(Pspwr,plot = TRUE, breaks = 150)
hist(Pvlo,plot = TRUE, breaks = 150)
hist(Pxom,plot = TRUE, breaks = 150)
#Program to calculate log(St/St-1) of 10 Stocks and project histogram
cnx = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/cnx.csv")
cop = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/cop.csv")
cvx = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/cvx.csv")
ipwr = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/ipwr.csv")
jks = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/jks.csv")
scty = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/scty.csv")
slp = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/slb.csv")
spwr = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/spwr.csv")
vlo = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/vlo.csv")
xom = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/xom.csv")
Lcnx = sapply(cnx[,5],log)
Lcop = sapply(cop[,5],log)
Lcvx = sapply(cvx[,5],log)
Lipwr = sapply(ipwr[,5],log)
Ljks = sapply(jks[,5],log)
Lscty = sapply(scty[,5],log)
Lslp = sapply(slp[,5],log)
Lspwr = sapply(spwr[,5],log)
Lvlo = sapply(vlo[,5],log)
Lxom = sapply(xom[,5],log)
Pcnx = 0
Pcop = 0
Pcvx = 0
Pipwr = 0
Pjks = 0
Pscty = 0
Pslp = 0
Pspwr = 0
Pvlo = 0
Pxom = 0
for (i in {2:length(Lcnx)}){
Pcnx[i] <- Lcnx[i] - Lcnx[i-1]
}
for (i in {2:length(Lcop)}){
Pcop[i] <- Lcop[i] - Lcop[i-1]
}
for (i in {2:length(Lcvx)}){
Pcvx[i] <- Lcvx[i] - Lcvx[i-1]
}
for (i in {2:length(Lipwr)}){
Pipwr[i] <- Lipwr[i] - Lipwr[i-1]
}
for (i in {2:length(Ljks)}){
Pjks[i] <- Ljks[i] - Ljks[i-1]
}
for (i in {2:length(Lscty)}){
Pscty[i] <- Lscty[i] - Lscty[i-1]
}
for (i in {2:length(Lslp)}){
Pslp[i] <- Lslp[i] - Lslp[i-1]
}
for (i in {2:length(Lspwr)}){
Pspwr[i] <- Lspwr[i] - Lspwr[i-1]
}
for (i in {2:length(Lvlo)}){
Pvlo[i] <- Lvlo[i] - Lvlo[i-1]
}
for (i in {2:length(Lxom)}){
Pxom[i] <- Lxom[i] - Lxom[i-1]
}
par(mfrow=c(5,2), mar = rep(2,4))
hist(Pcnx,plot = TRUE, breaks = 200)
hist(Pcop,plot = TRUE, breaks = 200)
hist(Pcvx,plot = TRUE, breaks = 200)
hist(Pipwr,plot = TRUE, breaks = 200)
hist(Pjks,plot = TRUE, breaks = 200)
hist(Pscty,plot = TRUE, breaks = 200)
hist(Pslp,plot = TRUE, breaks = 200)
hist(Pspwr,plot = TRUE, breaks = 200)
hist(Pvlo,plot = TRUE, breaks = 200)
hist(Pxom,plot = TRUE, breaks = 200)
#Program to calculate log(St/St-1) of 10 Stocks and project histogram
cnx = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/cnx.csv")
cop = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/cop.csv")
cvx = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/cvx.csv")
ipwr = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/ipwr.csv")
jks = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/jks.csv")
scty = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/scty.csv")
slp = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/slb.csv")
spwr = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/spwr.csv")
vlo = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/vlo.csv")
xom = read.csv("/Users/Shravan/Documents/ProbStats_hw1_data/Hw1/xom.csv")
Lcnx = sapply(cnx[,5],log)
Lcop = sapply(cop[,5],log)
Lcvx = sapply(cvx[,5],log)
Lipwr = sapply(ipwr[,5],log)
Ljks = sapply(jks[,5],log)
Lscty = sapply(scty[,5],log)
Lslp = sapply(slp[,5],log)
Lspwr = sapply(spwr[,5],log)
Lvlo = sapply(vlo[,5],log)
Lxom = sapply(xom[,5],log)
Pcnx = 0
Pcop = 0
Pcvx = 0
Pipwr = 0
Pjks = 0
Pscty = 0
Pslp = 0
Pspwr = 0
Pvlo = 0
Pxom = 0
for (i in {2:length(Lcnx)}){
Pcnx[i] <- Lcnx[i] - Lcnx[i-1]
}
for (i in {2:length(Lcop)}){
Pcop[i] <- Lcop[i] - Lcop[i-1]
}
for (i in {2:length(Lcvx)}){
Pcvx[i] <- Lcvx[i] - Lcvx[i-1]
}
for (i in {2:length(Lipwr)}){
Pipwr[i] <- Lipwr[i] - Lipwr[i-1]
}
for (i in {2:length(Ljks)}){
Pjks[i] <- Ljks[i] - Ljks[i-1]
}
for (i in {2:length(Lscty)}){
Pscty[i] <- Lscty[i] - Lscty[i-1]
}
for (i in {2:length(Lslp)}){
Pslp[i] <- Lslp[i] - Lslp[i-1]
}
for (i in {2:length(Lspwr)}){
Pspwr[i] <- Lspwr[i] - Lspwr[i-1]
}
for (i in {2:length(Lvlo)}){
Pvlo[i] <- Lvlo[i] - Lvlo[i-1]
}
for (i in {2:length(Lxom)}){
Pxom[i] <- Lxom[i] - Lxom[i-1]
}
par(mfrow=c(5,2), mar = rep(2,4))
hist(Pcnx,plot = TRUE, breaks = 250)
hist(Pcop,plot = TRUE, breaks = 250)
hist(Pcvx,plot = TRUE, breaks = 250)
hist(Pipwr,plot = TRUE, breaks = 250)
hist(Pjks,plot = TRUE, breaks = 250)
hist(Pscty,plot = TRUE, breaks = 250)
hist(Pslp,plot = TRUE, breaks = 250)
hist(Pspwr,plot = TRUE, breaks = 250)
hist(Pvlo,plot = TRUE, breaks = 250)
hist(Pxom,plot = TRUE, breaks = 250)
runExample("02_text")
library(shiny)
runExample("02_text")
#############################
# Shravan Kumar Chandrasekaran
# IEOR 4574
# Homework 2
# Due date: 02/18
#############################
getwd()
dir = "/Users/Shravan/BAOR/Assignment2"
#Setting working directory
setwd(dir)
#Reading College Data
Data<-read.csv("CollegeData.csv")
#Summaziring the Data
summary(Data)
?na.omit
na.omit(Data)
summary(Data)
Data_Cleaned<- na.omit(Data)
#Reading College Dictionary Data
Data_Dictionary<-read.csv("CollegeDataDictionary.csv")
#Summaziring the Data
summary(Data_Dictionary)
Data_Dictionary_Cleaned<-na.omit(Data_Dictionary)
View(Data_Dictionary)
colnames(Data_Cleaned)
head(Data_Cleaned)
Data_Cleaned$COSTT4_A_Log<-log(Data_Cleaned$COSTT4_A)
colnames(Data_Cleaned)
View(Data_Cleaned)
View(Data_Cleaned)
#Making new log columns for $ columns
Data_Cleaned$COSTT4_A_Log<-log(Data_Cleaned$COSTT4_A)
Data_Cleaned$TUITIONFEE_OUT_Log<-log(Data_Cleaned$TUITIONFEE_OUT)
Data_Cleaned$TUITFTE_Log<-log(Data_Cleaned$TUITFTE)
Data_Cleaned$AVGFACSAL_Log<-log(Data_Cleaned$AVGFACSAL)
#Ma
Data_Cleaned$COSTT4_A_Log<-log(as.numeric(Data_Cleaned$COSTT4_A))
#Making new log columns for $ columns
Data_Cleaned$COSTT4_A_Log<-log(as.numeric(Data_Cleaned$COSTT4_A))
Data_Cleaned$TUITIONFEE_OUT_Log<-log(as.numeric(Data_Cleaned$TUITIONFEE_OUT))
Data_Cleaned$TUITFTE_Log<-log(as.numric(Data_Cleaned$TUITFTE))
Data_Cleaned$AVGFACSAL_Log<-log(as.numeric(Data_Cleaned$AVGFACSAL))
#Making interaction terms for Log columns
Data_Cleaned$INTER_COSTT4_A_Log_TUITIONFEE_OUT_Log <- Data_Cleaned$COSTT4_A_Log*Data_Cleaned$TUITIONFEE_OUT_Log
Data_Cleaned$INTER_COSTT4_A_Log_TUITFTE_Log <- Data_Cleaned$COSTT4_A_Log*Data_Cleaned$TUITIONFEE_OUT_Log
Data_Cleaned$INTER_COSTT4_A_Log_AVGFACSAL_Log <- Data_Cleaned$COSTT4_A_Log*Data_Cleaned$AVGFACSAL_Log
#Making new log columns for $ columns
Data_Cleaned$COSTT4_A_Log<-log(as.numeric(Data_Cleaned$COSTT4_A))
Data_Cleaned$TUITIONFEE_OUT_Log<-log(as.numeric(Data_Cleaned$TUITIONFEE_OUT))
Data_Cleaned$TUITFTE_Log<-log(as.numeric(Data_Cleaned$TUITFTE))
Data_Cleaned$AVGFACSAL_Log<-log(as.numeric(Data_Cleaned$AVGFACSAL))
#Making interaction terms for Log columns
Data_Cleaned$INTER_COSTT4_A_Log_TUITIONFEE_OUT_Log <- Data_Cleaned$COSTT4_A_Log*Data_Cleaned$TUITIONFEE_OUT_Log
Data_Cleaned$INTER_COSTT4_A_Log_TUITFTE_Log <- Data_Cleaned$COSTT4_A_Log*Data_Cleaned$TUITIONFEE_OUT_Log
Data_Cleaned$INTER_COSTT4_A_Log_AVGFACSAL_Log <- Data_Cleaned$COSTT4_A_Log*Data_Cleaned$AVGFACSAL_Log
#Making interaction terms for Log columns
Data_Cleaned$INTER_COSTT4_A_Log_TUITIONFEE_OUT_Log <- Data_Cleaned$COSTT4_A_Log*Data_Cleaned$TUITIONFEE_OUT_Log
Data_Cleaned$INTER_COSTT4_A_Log_TUITFTE_Log <- Data_Cleaned$COSTT4_A_Log*Data_Cleaned$TUITIONFEE_OUT_Log
Data_Cleaned$INTER_COSTT4_A_Log_AVGFACSAL_Log <- Data_Cleaned$COSTT4_A_Log*Data_Cleaned$AVGFACSAL_Log
Data_Cleaned$INTER_TUITIONFEE_OUT_Log_TUITFTE_Log <- Data_Cleaned$TUITIONFEE_OUT_Log*Data_Cleaned$TUITFTE_Log
Data_Cleaned$INTER_TUITIONFEE_OUT_Log_AVGFACSAL_Log <- Data_Cleaned$TUITIONFEE_OUT_Log*Data_Cleaned$AVGFACSAL_Log
Data_Cleaned$TUITFTE_Log_AVGFACSAL_Log <- Data_Cleaned$TUITFTE_Log*Data_Cleaned$AVGFACSAL_Log
print col(Data_Cleaned$INSTNM)
print
print(col(Data_Cleaned$INSTNM))
print(colnames(Data_Cleaned$INSTNM))
print(colnames(Data_Cleaned))
print(colnames(Data))
for cols in colnames(Data_Cleaned)
{
print(cols)
}
for(cols in colnames(Data_Cleaned))
{
print(cols)
}
typeof(Data_Cleaned$INSTNM)
typeof(Data_Cleaned$C150_4)
for(cols in colnames(Data_Cleaned))
{
typeof(Data_Cleaned[cols])
}
for(cols in colnames(Data_Cleaned))
{
print(typeof(Data_Cleaned[cols]))
}
typeof(Data_Cleaned$INSTNM)
col
cols
typeof(Data_Cleaned[cols])
typeof(Data_Cleaned$TUITFTE_Log_AVGFACSAL_Log)
typeof(Data_Cleaned['cols'])
typeof(Data_Cleaned[cols])
for(i in 2:20)
{
(typeof(Data_Cleaned[i]))
}
i
typeof(Data_Cleaned[i])
typeof(Data_Cleaned$i)
Data_Cleaned[i]
mean(Data_Cleaned[i])
mean(Data_Cleaned$SAT_AVG)
mean(Data_Cleaned[15])
mean(Data_Cleaned[20])
mean(Data_Cleaned[i,])
mean(Data_Cleaned[,cols])
for(cols in colnames(Data_Cleaned))
{
mean(Data_Cleaned[,cols])
}
for(cols in colnames(Data_Cleaned))
{
typeof(Data_Cleaned[,cols])
}
Data_Cleaned[,19]
mean(Data_Cleaned[,19])
mean(Data_Cleaned[,20])
mean(Data_Cleaned[,17])
for(i in 2:20)
{
mean(Data_Cleaned[,i])
}
for(i in 2:20)
{
MEAN[i]<-mean(Data_Cleaned[,i])
}
for(i in 2:20)
{
MEAN<-mean(Data_Cleaned[,i])
}
MEAN <-rep(0, times=19)
for(i in 2:20)
{
MEAN[i-1]<-mean(Data_Cleaned[,i])
}
MEAN
set.seed(4574)
which?
?which
x = c(1,2,5,15,3,10)
which(x >= 10) #indices of x which are >= 10
x = c(1,2,5,15,3,10)
which(x >= 10) #indices of x which are >= 10
which(x >= 4 & x < 8) #indices of x which are >= 4 AND < 8
x = c(1,2,5,15,3,10)
which(x >= 10) #indices of x which are >= 10
which(x >= 4 & x < 8) #indices of x which are >= 4 AND < 8
x[x < 2 | x > 10] #values of x which are < 2 OR > 10
?sample
train <- sample(Data_Cleaned, 0.7*Data_Cleaned)
nrow(Data_Cleaned)
0.75*nrow(Data_Cleaned)
train <- sample(1:nrow(Data_Cleaned), 0.75*Data_Cleaned)
train <- sample(1:nrow(Data_Cleaned), 0.75*nrow(Data_Cleaned))
mean(Data_Cleaned$SAT_AVG[1:train])
mean(Data_Cleaned$SAT_AVG[1])
mean(Data_Cleaned$SAT_AVG[2])
mean(Data_Cleaned$SAT_AVG[1:2])
mean(Data_Cleaned$SAT_AVG[1:train])
train <- sample(1:nrow(Data_Cleaned), 0.75*nrow(Data_Cleaned))
test = -train
mean(Data_Cleaned$SAT_AVG[train+1:])
mean(Data_Cleaned$SAT_AVG[-train])
mean(Data_Cleaned$SAT_AVG[test])
mean(Data_Cleaned$SAT_AVG[train])
library(boot) #contains useful functions for cross-validation
?glm
library(leaps) #contains the function regsubsets
install.packages(leaps)
library(leaps) #contains the function regsubsets
install.packages("leaps")
library(leaps) #contains the function regsubsets
install.packages("leaps")
library(leaps) #contains the function regsubsets
sum(is.na(Data_Cleaned$SAT_AVG))
